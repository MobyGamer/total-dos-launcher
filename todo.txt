To-Do list of planned but current unimplemented features

[User Interface and customization]===========================================

- Simple color scheme support.  Create colors.ini and add into it both a color
  and a mono scheme.  Clearly define what user interface elements are changed,
  and list the default text colors in the ini for convenience.

- Complex color scheme support.  Modify colors.ini to accept palette remapping
  for a specific color.  Ensure that the default palette on program entry is
  saved and restored as necessary so that text colors in launched programs
  aren't goofy.  

- Font support.  Modify colors.ini to accept a font file for various text modes.  INI could look something like:
  8x8=8x8cour.fnt
  8x16=16couri.fnt
  ...etc.
  Save and restore font so that launched programs don't look weird.

[Program storage, file handling, caching]====================================

[Program internals]==========================================================
- Formalize favorites to be a bit flag in cache.dat and rewrite that whole
  system into its own unit.  Define additional flags in tdl_formats.txt.


It would be nice to be able to add notes to each title, that show up when you run them. That way you can note things like How to exit or which executable to select to run the the title. Go to a title, hit enter, if there is a note pops up it pops up and you hit enter again to launch, of no note is present it just launches.

ctrl-enter to launch with custom arguments.  Save the arguments somehow? (tie to saving a line of notes, perhaps?)

remembering the file to execute so that you don't have to choose, that's a good idea, but I need to think about how to implement it in terms of the user experience.  (Suggestions welcome!)  Maybe a "remember this choice?" dialog with a checkbox before the user confirms, perhaps

"meta handler" -- ave a way to set up a pre-handler to run before the regular handling. the specific use case I'm thinking of is being able to set up a sort of meta-handler that uses mTCP's HTGET to download the zip file off a local media server



power user: decompress all files (will require cache stuff first)
when importing handlers, add a special check for command.com to check comspec
info-box where full title and other stuff can be read
Power user title picker: Abillity to rewrite a title
Power user title picker: Delete a title (will need to remove cache dir, file, and rewrite indexes)
favorites export/import
screensaver (figure out how totinput does idle events)
Info screen for highlighted title
Search-as-you-type
Cache management strategy.  Move all cache management into unit so we can:
  come up with cache purge strategy.
  strategy can be limited to 5 dirs for testing and then avail disk space for final
  strategy should determine exact amount of storage needed from archive header but can estimate 4*archive size 4now
Power user file picker:  Delete a file from cache dir
Power user title picker: Command key to switch to cache dir and then exit the program
Ability to track what titles have been executed, how many times, and top20
}


==========================================================================
Implemented features go here, with the date they were added:

